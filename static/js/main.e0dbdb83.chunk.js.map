{"version":3,"sources":["components/ModButton.js","components/SingleDice.js","components/Backdrop.js","components/Credit.js","components/VDice.js","components/SelectView.js","App.js","reportWebVitals.js","index.js"],"names":["ModButton","props","useState","value","setValue","className","name","onClick","min","cbValue","SingleDice","rollSettings","rollDice","dSide","dNumber","rollMod","Backdrop","StyledLink","styled","a","StyledP","p","CreditDiv","div","Credit","href","target","rel","Title","h1","ModContainer","VDice","setDNumber","setRollMod","rollResult","setRollResult","arrToStr","arr","str","i","length","slice","max","result","rolls","rollModStr","push","Math","ceil","floor","random","total","rollsStr","diceTypeStr","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0dbdb83.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './css/ModButton.css'\r\n\r\nconst ModButton = (props) => {\r\n\r\n  const [value, setValue] = useState(props.value)\r\n\r\n  let incValue = (min) => {\r\n    if (min === false) {\r\n      setValue(value + 1)\r\n      props.cbValue(value + 1)\r\n    } else {\r\n      if ((value+1) >= min) {\r\n        setValue(value + 1)\r\n        props.cbValue(value + 1)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  let decValue = (min) => {\r\n    if (min === false) {\r\n      setValue(value - 1)\r\n      props.cbValue(value - 1)\r\n    } else {\r\n      if ((value-1) >= min) {\r\n        setValue(value - 1)\r\n        props.cbValue(value - 1)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"ModButton\">\r\n      <h1>{props.name}</h1>\r\n      <div className=\"Controls\">\r\n        <button onClick={() => decValue(props.min)}>-</button>\r\n        <div>{value}</div>\r\n        <button onClick={() => incValue(props.min)}>+</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModButton","import React from 'react'\r\n\r\nimport './css/SingleDice.css'\r\n\r\nconst SingleDice = (props) => {\r\n\r\n  return (\r\n    <button className=\"SingleDice\" onClick={()=>{props.rollSettings.rollDice(\r\n      props.dSide,\r\n      props.rollSettings.dNumber,\r\n      props.rollSettings.rollMod\r\n    )\r\n  }}>d{props.dSide}</button>\r\n  )\r\n}\r\n\r\nexport default SingleDice;","import React from 'react'\r\nimport './css/Backdrop.css'\r\n\r\nconst Backdrop = (props) => {\r\n  return (\r\n    <div  className=\"backdrop image\"></div>    \r\n  )\r\n}\r\n\r\nexport default Backdrop\r\n","import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLink = styled.a`\r\n  font-size: 0.5em;\r\n  text-align: right;\r\n  text-decoration: none;\r\n  color: rgba(255, 255, 255, 0.5);\r\n  :hover {\r\n    color: rgba(255,255,255, 0.95);\r\n  }\r\n`\r\n\r\nconst StyledP = styled.p`\r\n  font-size: 0.5em;\r\n  text-align: right;\r\n  text-decoration: none;\r\n  color: rgba(255, 255, 255, 0.5);\r\n  display: inline;\r\n`\r\n\r\nconst CreditDiv = styled.div`\r\n  position: fixed;\r\n  bottom: 0.5vw;\r\n  right: 0.5vw;\r\n`\r\n\r\nconst Credit = () => {\r\n\r\n  return (\r\n    <CreditDiv>\r\n      <StyledLink\r\n        href=\"https://wallpapersmug.com/w/download/1920x1080/cyberpunk-city-buildings-art-13377a25488\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        background art source\r\n    </StyledLink>\r\n    <StyledP> | </StyledP>\r\n      <StyledLink\r\n        href=\"https://github.com/trailblazingfive\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        app by trailblazingfive 2021\r\n    </StyledLink>\r\n    </CreditDiv>\r\n  );\r\n};\r\n\r\nexport default Credit;","import React, { useState } from 'react';\r\nimport './css/VDice.css'\r\n\r\nimport ModButton from './ModButton'\r\nimport SingleDice from './SingleDice'\r\nimport Backdrop from \"./Backdrop\";\r\nimport Credit from \"./Credit\"\r\n\r\n\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  font-size: 2em;\r\n  user-select: none;\r\n`\r\n\r\nconst ModContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: rows;\r\n  vertical-align: middle;\r\n  @media screen and (min-width:300px) and (max-width:1000px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\nconst VDice = (props) => {\r\n\r\n  const [dNumber, setDNumber] = useState(1)\r\n  const [rollMod, setRollMod] = useState(0)\r\n  const [rollResult, setRollResult] = useState('')\r\n\r\n  // https://developer.mozilla.org/pl/docs/Web/JavaScript/Reference/Global_Objects/Math/random\r\n  function getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  const rollDice = (dSide, dNumber, rollMod) => {\r\n    let result = 0\r\n    let rolls = []\r\n    let rollModStr = ''\r\n    for (let i = 1; i <= dNumber; i++) {\r\n      rolls.push(getRandomIntInclusive(1, dSide))\r\n      result += rolls[rolls.length - 1]\r\n    }\r\n    result += rollMod\r\n    if (rollMod === 0) {\r\n      rollModStr = \"\"\r\n    } else if (rollMod > 0) {\r\n      rollModStr = `+${rollMod}`\r\n    } else if (rollMod < 0) {\r\n      rollModStr = `${rollMod}`\r\n    }\r\n    setRollResult({\r\n      total: result,\r\n      rolls: rolls,\r\n      rollsStr: arrToStr(rolls),\r\n      diceTypeStr: `${dNumber}d${dSide}${rollModStr}`\r\n    })\r\n  }\r\n\r\n  const arrToStr = (arr) => {\r\n    let str = ''\r\n    for (let i = 0; i < arr.length; i++) {\r\n      str += `${arr[i]}, `\r\n    }\r\n    return str.slice(0, -2)\r\n  }\r\n\r\n  const rollSettings = {\r\n    rollMod: rollMod,\r\n    dNumber: dNumber,\r\n    rollDice: rollDice\r\n  }\r\n\r\n  return (\r\n    <div className=\"VDice\">\r\n      <Title>Virtual dice</Title>\r\n      <div className=\"RollResults\">\r\n        <p>{rollResult.diceTypeStr}</p>\r\n        <p id=\"DiceTotal\">{rollResult.total}</p>\r\n        <p id=\"DiceRolls\">{rollResult.rollsStr}</p>\r\n      </div>\r\n      <SingleDice dSide={4} rollSettings={rollSettings}></SingleDice>\r\n      <SingleDice dSide={6} rollSettings={rollSettings}></SingleDice>\r\n      <SingleDice dSide={8} rollSettings={rollSettings}></SingleDice>\r\n      <SingleDice dSide={10} rollSettings={rollSettings}></SingleDice>\r\n      <SingleDice dSide={12} rollSettings={rollSettings}></SingleDice>\r\n      <SingleDice dSide={20} rollSettings={rollSettings}></SingleDice>\r\n      <SingleDice dSide={100} rollSettings={rollSettings}></SingleDice>\r\n      <ModContainer>\r\n        <ModButton name={'Set number of dice'} value={dNumber} cbValue={setDNumber} min={1}></ModButton>\r\n        <ModButton name={'Set roll modification'} value={rollMod} cbValue={setRollMod} min={false}></ModButton>\r\n      </ModContainer>\r\n      <Backdrop />\r\n      <Credit/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default VDice;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SelectViewContainer = styled.div`\r\n  display: flexbox;\r\n  flex-direction: rows;\r\n  vertical-align: middle;\r\n  padding: 5px;\r\n  width: 50%;\r\n`\r\n\r\nconst ViewButton = styled.div`\r\n  background: black;\r\n  border-radius: 2px;\r\n  border: 2px white solid;\r\n  padding: 10px;\r\n  width: 100px;\r\n  :hover {\r\n    background: white;\r\n    color: black;\r\n    border: 2px black solid;\r\n  }\r\n`\r\n\r\nconst SelectView = (props) => {\r\n\r\n  return (\r\n    <SelectViewContainer>\r\n      <ViewButton>Dice roll</ViewButton>\r\n      <ViewButton>History</ViewButton>\r\n    </SelectViewContainer>\r\n  )\r\n}\r\n\r\nexport default SelectView","import './App.css';\r\nimport VDice from './components/VDice'\r\nimport SelectView from './components/SelectView'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <SelectView></SelectView> */}\r\n      <VDice></VDice>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}